[
    {
        "user": "U04RCBZLRJT",
        "type": "message",
        "ts": "1689077862.490229",
        "edited": {
            "user": "U04RCBZLRJT",
            "ts": "1689077980.000000"
        },
        "client_msg_id": "894ad3af-83f9-414b-b5a6-a51e0e46ffd2",
        "text": "Well, for me these \"optimizations\" in BigStitcher are not really optimized for lightsheet data. If we use data sets with left and right light sheet separated then we have the illumination selection in BigStitcher already in place. Here, depending on the global position in the dataset, it is decided whether the left or the right light sheet is used during the tile stitching.  An adaptive deconvolution would be the best , which takes into account the scatter properties of the left and right light sheet per tile. If this is implemented in the BigStitcher deconvolution approach then it would be indeed a good solution. I guess here simply one excitation PSF is used per tile over the whole FOV (just the classic approach).",
        "team": "T01FQQGKPLH",
        "user_team": "T01FQQGKPLH",
        "source_team": "T01FQQGKPLH",
        "user_profile": {
            "avatar_hash": "347ac1a0e4a3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-03-20\/4979991682036_347ac1a0e4a3ae562b1b_72.jpg",
            "first_name": "Matthias",
            "real_name": "Matthias Richter",
            "display_name": "Matthias Richter",
            "team": "T01FQQGKPLH",
            "name": "m.richter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CsrQW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, for me these \"optimizations\" in BigStitcher are not really optimized for lightsheet data. If we use data sets with left and right light sheet separated then we have the illumination selection in BigStitcher already in place. Here, depending on the global position in the dataset, it is decided whether the left or the right light sheet is used during the tile stitching.  An adaptive deconvolution would be the best , which takes into account the scatter properties of the left and right light sheet per tile. If this is implemented in the BigStitcher deconvolution approach then it would be indeed a good solution. I guess here simply one excitation PSF is used per tile over the whole FOV (just the classic approach)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04RCBZLRJT",
        "type": "message",
        "ts": "1689078263.479989",
        "client_msg_id": "f371eadc-1c80-43a3-a6e5-6d0d543b1303",
        "text": "Or do you mean with \"adaptive solution\" something like Leica is doing with the Lightning adaptive Deconvolution?",
        "team": "T01FQQGKPLH",
        "user_team": "T01FQQGKPLH",
        "source_team": "T01FQQGKPLH",
        "user_profile": {
            "avatar_hash": "347ac1a0e4a3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-03-20\/4979991682036_347ac1a0e4a3ae562b1b_72.jpg",
            "first_name": "Matthias",
            "real_name": "Matthias Richter",
            "display_name": "Matthias Richter",
            "team": "T01FQQGKPLH",
            "name": "m.richter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AkLO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or do you mean with \"adaptive solution\" something like Leica is doing with the Lightning adaptive Deconvolution?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U059LQCN1HN",
        "type": "message",
        "ts": "1689095953.351759",
        "client_msg_id": "cfc3995c-457f-456a-a07c-562c84b2b510",
        "text": "I did not have any specific examples in mind, was simply curious about what you found not reasonable about the current deconvolution options. Not familiar with the Lightning deconvolution, but I hope it is more reasonable than the \"Thunder\" processing!",
        "team": "T01FQQGKPLH",
        "user_team": "T01FQQGKPLH",
        "source_team": "T01FQQGKPLH",
        "user_profile": {
            "avatar_hash": "798070bfed71",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-22\/5326828856608_798070bfed71fa61b19d_72.jpg",
            "first_name": "Michael",
            "real_name": "Michael S. Nelson",
            "display_name": "Michael S. Nelson",
            "team": "T01FQQGKPLH",
            "name": "msnelson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sbx0i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I did not have any specific examples in mind, was simply curious about what you found not reasonable about the current deconvolution options. Not familiar with the Lightning deconvolution, but I hope it is more reasonable than the \"Thunder\" processing!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]